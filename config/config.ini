[ga]
# The number of individuals (enrichment patterns) in the population. A larger population explores more but is slower. (Default: 1500)
population_size = 1500
# The number of generations the GA will run using ML predictors before triggering a full OpenMC verification. (Default: 1000)
generations_per_openmc_cycle = 1000
# Base probability (0.0 to 1.0) that a gene (enrichment value) will be mutated. (Default: 0.20)
mutation_rate = 0.20
# The maximum mutation rate that the adaptive algorithm can reach. Should not be too high. (Default: 0.30)
max_mutation_rate = 0.30
# Probability (0.0 to 1.0) that two parents will perform crossover. (Default: 0.85)
crossover_rate = 0.85
# Maximum crossover rate for the adaptive algorithm. (Default: 0.90)
max_crossover_rate = 0.90
# Number of top individuals guaranteed to survive to the next generation. (Default: 10)
elitism_count = 10
# Number of generations with no improvement before mutation/crossover rates are adaptively increased. (Default: 50)
stagnation_threshold = 50
# If population diversity (average difference between individuals) falls below this, rates are increased. (Default: 0.3)
diversity_threshold = 0.3
# Number of individuals that compete in a selection tournament. The winner becomes a parent. (Default: 20)
tournament_size = 20

[ga_tuning]
# Frequency (in generations) to log GA progress. (Default: 100)
log_frequency = 100
# Number of individuals to sample when calculating diversity. (Default: 50)
diversity_sample_size = 50
# Penalty factor in the fitness function when k-effective is outside the target tolerance. (Default: 5)
keff_penalty_factor = 5
# K-effective difference threshold above which fitness is heavily weighted towards improving k-effective. (Default: 0.05)
high_keff_diff_threshold = 0.05
# K-effective difference threshold for a balanced fitness weight. (Default: 0.02)
med_keff_diff_threshold = 0.02
# Factor to increase mutation rate when k-effective is far from the target. (Default: 1.5)
smart_mutate_increase_factor = 1.5
# Factor to decrease mutation rate when k-effective is close to the target. (Default: 0.8)
smart_mutate_decrease_factor = 0.8

[enrichment]
# Defines the available enrichment values for central assemblies. Format: start, stop, step.
# Example: If your reactor's nominal enrichment is 16%, try a range below and around it.
central_range = 14.0, 15.5, 0.1
# Defines the available enrichment values for outer assemblies. Format: start, stop, step.
# Example: Try a range above and around the nominal enrichment.
outer_range = 14.5, 18.0, 0.1
# Number of initial OpenMC simulations to run if 'initial_configs' is empty. At least 100 is recommended for a good baseline.
initial_samples = 100
# **HIGHLY RECOMMENDED**: A specific list of (central, outer) enrichment pairs for initial data generation.
# This overrides 'initial_samples' and gives you full control. Ensure these points cover your search space well.
#initial_configs = [(14.0, 14.5), (14.0, 15.0), (14.0, 16.0), (14.0, 17.0), (14.0, 18.0), (15.5, 14.5), (15.5, 15.0), (15.5, 16.0), (15.5, 17.0), (15.5, 18.0), (14.5, 14.5), (15.0, 15.0), (15.1, 15.1), (15.2, 15.2), (15.3, 15.3), (14.1, 14.8), (14.2, 15.5), (14.3, 16.5), (14.4, 17.5), (14.6, 15.2), (14.7, 16.0), (14.8, 17.0), (14.9, 18.0), (15.0, 14.7), (15.0, 15.5), (15.0, 16.5), (15.0, 17.5), (15.1, 15.8), (15.2, 16.2), (15.3, 17.0), (15.4, 18.0), (14.5, 16.5), (14.6, 17.5), (14.7, 18.0), (14.8, 14.9), (14.9, 15.5), (15.1, 16.8), (15.2, 17.2), (15.3, 16.0), (15.4, 15.6), (15.5, 16.5)]

[simulation]
# **CRITICAL**: The target k-effective value for your reactor design.
target_keff = 1.12437
# The tolerance for k-effective. Designs outside this tolerance are heavily penalized.
keff_tolerance = 0.01
# The total number of full OpenMC verification cycles to run. (Default: 300)
num_cycles = 300
# **CRITICAL**: The total number of fuel assemblies in your reactor model.
num_assemblies = 150
# **CRITICAL**: The number of assemblies in the central region (determined in Step 3).
num_central_assemblies = 54
# **CRITICAL**: The starting material ID for the first fuel assembly in materials.xml (determined in Step 1).
start_id = 3
# **CRITICAL**: Path to the OpenMC materials file.
materials_xml_path = materials.xml
# **CRITICAL**: Name of the fission tally in tallies.xml (determined in Step 2).
fission_tally_name = fission_in_fuel_cells
# File path for storing the PPF interpolator's dataset.
ppf_interp_file = data/ppf_interp_data.json
# File path for storing the k-effective interpolator's dataset.
keff_interp_file = data/keff_interp_data.json
# File path for the main checkpoint file that saves the GA's overall state.
checkpoint_file = data/ga_checkpoint.json
# The glob pattern to find the latest OpenMC statepoint file.
statepoint_filename_pattern = statepoint.*.h5
# Number of times to retry a failed OpenMC simulation.
openmc_retries = 2
# Delay in seconds between retries.
openmc_retry_delay = 5

[hardware]
# Set to 1 to enable CPU-based ML models (scikit-learn), 0 to disable.
cpu = 1
# Set to 1 to enable GPU-based ML models (cuML). If both are 1, GPU is preferred.
gpu = 0

[interpolator]
# Maximum number of data points to keep for the k-effective interpolator.
max_keff_points = 100000
# Maximum number of data points to keep for the PPF interpolator.
max_ppf_points = 100000
# Minimum number of data points required before the interpolators start making predictions.
min_interp_points = 20
# Minimum R^2 validation score required to accept a retrained PPF model. Prevents model degradation.
min_validation_score = 0.05
# Type of regressor for PPF prediction. Options: knn, random_forest, ridge. (Default: random_forest)
regressor_type = random_forest
# Number of nearest neighbors to use for the KNN regressor.
n_neighbors = 7
